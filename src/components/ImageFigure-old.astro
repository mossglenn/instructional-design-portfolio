---
import { clsx } from 'clsx';
import type { ImageMetadata } from 'astro';
interface Props {
  figureImage: ImageMetadata;
  alt: string;
  containerClassName?: string;
  figureClassName?: string;
  buttonClassName?: string;
  imageClassName?: string;
  captionClassName?: string;
  captionPosition?: 'top' | 'bottom' | 'left' | 'right';
}
import { Image } from 'astro:assets';

const {
  figureImage,
  alt,
  containerClassName = '',
  figureClassName = '',
  buttonClassName = '',
  imageClassName = '',
  captionClassName = '',
  captionPosition = 'bottom',
} = Astro.props;

const finalContainerClass = clsx(
  'break-inside-avoid rounded-lg shadow-lg p-2',
  containerClassName,
);

const finalFigureClass = clsx(figureClassName);
const finalButtonClass = clsx(
  'block w-full cursor-zoom-in rounded-lg group',
  buttonClassName,
);
const finalImageClass = clsx(
  'w-full mx-auto rounded-lg hover:ring-2 hover:ring-accent-400',
  imageClassName,
);
let captionSpacing = '';
switch (captionPosition) {
  case 'top':
    captionSpacing = 'pb-8';
    break;
  case 'bottom':
    captionSpacing = 'pt-8';
    break;
  case 'left':
    captionSpacing = 'pb-8 md:pb-0';
    break;
  case 'right':
    captionSpacing = 'pt-8 md:pt-0 ';
    break;
  default:
    captionSpacing = '';
}

const finalCaptionClass = clsx(
  'text-neutral-700 text-pretty text-sm mx-auto',
  captionSpacing,
  captionClassName,
);

const isSideCaption = captionPosition === 'left' || captionPosition === 'right';
---

<div class={clsx('@container', finalContainerClass)}>
  <figure
    class={clsx(
      captionPosition === 'left' &&
        'flex flex-col @2xl:flex-row @2xl:items-end',
      captionPosition === 'right' &&
        'flex flex-col-reverse @2xl:flex-row-reverse @2xl:items-end',
      finalFigureClass,
      'group',
    )}
  >
    {
      isSideCaption ? (
        <>
          <figcaption
            class={clsx(finalCaptionClass, 'basis-1/3 shrink-0 px-4')}
          >
            <slot name="caption" />
          </figcaption>
          <button type="button" class={finalButtonClass} data-zoom-trigger>
            <div class="relative">
              <Image src={figureImage} alt={alt} class={finalImageClass} />
              <div class="absolute bottom-1 left-1 bg-neutral-300/50 text-neutral-900 text-xs p-1 rounded hidden [@media(hover:none)]:block">
                Tap to zoom
              </div>
              <div class="absolute bottom-1 right-1 bg-neutral-300/50 p-1 rounded shadow-sm transition-opacity opacity-0 group-hover:opacity-100 pointer-events-none">
                <svg
                  class="w-4 h-4 text-neutral-900"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M21 21l-4.35-4.35M11 19a8 8 0 1 1 0-16 8 8 0 0 1 0 16z"
                  />
                </svg>
              </div>
            </div>
          </button>
        </>
      ) : (
        <>
          {captionPosition === 'top' && (
            <figcaption class={finalCaptionClass}>
              <slot name="caption" />
            </figcaption>
          )}
          <button type="button" class={finalButtonClass} data-zoom-trigger>
            <div class="relative">
              <Image src={figureImage} alt={alt} class={finalImageClass} />
              <div class="absolute bottom-1 left-1 bg-neutral-300/50 text-neutral-900 text-xs p-1 rounded hidden [@media(hover:none)]:block">
                Tap to zoom
              </div>
              <div class="absolute bottom-1 right-1 bg-neutral-300/50 p-1 rounded shadow-sm transition-opacity opacity-0 group-hover:opacity-100 pointer-events-none">
                <svg
                  class="w-4 h-4 text-neutral-900"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M21 21l-4.35-4.35M11 19a8 8 0 1 1 0-16 8 8 0 0 1 0 16z"
                  />
                </svg>
              </div>
            </div>
          </button>
          {captionPosition === 'bottom' && (
            <figcaption class={finalCaptionClass}>
              <slot name="caption" />
            </figcaption>
          )}
        </>
      )
    }
  </figure>
</div>
